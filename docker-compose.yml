version: "3.9"

networks:
  teste-dev-php:
services:
  webserver:
    image: nginx:1.21.3-alpine
    container_name: teste-dev-php-webserver
    networks:
      - teste-dev-php
    ports:
      - ${WEBSERVER_HOST_PORT}:${WEBSERVER_DOCKER_PORT}
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
    depends_on:
      - webapp
  webapp:
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile-dev
      args:
        - COMPOSER_VERSION=${COMPOSER_VERSION}
        - COMPOSER_SUM=${COMPOSER_SUM}
    image: teste-dev-php-webapp:dev
    container_name: teste-dev-php-webapp
    networks:
      - teste-dev-php
    expose:
      - "${WEBAPP_DOCKER_PORT}"
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    depends_on:
      # - db
      - cache
    environment:
      - NODE_ENV=development
  mysql:
    image: mysql:8.0
    container_name: teste-dev-php-db
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - teste-dev-php
    ports:
      - "3312:3306"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/mysql.conf.d/bind.cnf
      - ./docker/mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
  cache:
    image: redis:6.2.5-alpine3.14
    container_name: teste-dev-php-cache
    networks:
      - teste-dev-php
    ports:
      - '${CACHE_HOST_PORT}:${CACHE_DOCKER_PORT}'
    volumes:
      - ./docker/cache/data:/redis/db
    environment:
      - REDIS_PASSWORD=${CACHE_PASSWORD}
